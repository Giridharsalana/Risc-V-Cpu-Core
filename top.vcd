$date
    Sat Dec 12 12:17:43 2020
$end
$version
    MyHDL 0.11
$end
$timescale
    1ns
$end

$scope module top $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module clock0 $end
$var reg 1 ! clk $end
$upscope $end
$scope module cpu_top0 $end
$var reg 5 # ra $end
$var reg 5 $ rb $end
$var reg 5 % wa $end
$var reg 32 & wda $end
$var reg 32 ' rda $end
$var reg 32 ( rdb $end
$var reg 32 ) rdx $end
$var reg 4 * alu_op $end
$var reg 1 + brnch $end
$var reg 1 , mem_rd $end
$var reg 1 - mem_to_rgs $end
$var reg 1 . mem_wr $end
$var reg 1 / alu_src $end
$var reg 1 0 reg_wr $end
$var reg 7 1 opcode $end
$var reg 32 2 result $end
$var reg 32 3 read_data $end
$var reg 32 4 shl $end
$var reg 1 5 pc_sel $end
$var reg 32 6 im_gen $end
$var reg 4 7 oprtin $end
$var reg 32 8 read_addr $end
$var reg 32 9 instruction $end
$var reg 32 : pc_addr $end
$var reg 32 ; jmp_addr $end
$var reg 1 ! clk $end
$var reg 32 < pc $end
$var reg 1 " reset $end
$var reg 1 = step $end
$scope module control0 $end
$var reg 4 * alu_op $end
$var reg 1 / alu_src $end
$var reg 1 + brnch $end
$var reg 1 , mem_rd $end
$var reg 1 - mem_to_rgs $end
$var reg 1 . mem_wr $end
$var reg 7 1 opcode $end
$var reg 1 0 reg_wr $end
$var reg 1 " reset $end
$upscope $end
$scope module data_mem0 $end
$var reg 1 ! clk $end
$var reg 1 , mem_rd $end
$var reg 1 . mem_wr $end
$var reg 32 ( rdb $end
$var reg 32 3 read_data $end
$var reg 1 " reset $end
$var reg 32 2 result $end
$scope module data_ram $end
$var reg 32 > data_ram(0) $end
$var reg 32 ? data_ram(1) $end
$var reg 32 @ data_ram(2) $end
$var reg 32 A data_ram(3) $end
$var reg 32 B data_ram(4) $end
$var reg 32 C data_ram(5) $end
$var reg 32 D data_ram(6) $end
$var reg 32 E data_ram(7) $end
$var reg 32 F data_ram(8) $end
$var reg 32 G data_ram(9) $end
$var reg 32 H data_ram(10) $end
$var reg 32 I data_ram(11) $end
$var reg 32 J data_ram(12) $end
$var reg 32 K data_ram(13) $end
$var reg 32 L data_ram(14) $end
$var reg 32 M data_ram(15) $end
$var reg 32 N data_ram(16) $end
$var reg 32 O data_ram(17) $end
$var reg 32 P data_ram(18) $end
$var reg 32 Q data_ram(19) $end
$var reg 32 R data_ram(20) $end
$var reg 32 S data_ram(21) $end
$var reg 32 T data_ram(22) $end
$var reg 32 U data_ram(23) $end
$var reg 32 V data_ram(24) $end
$var reg 32 W data_ram(25) $end
$var reg 32 X data_ram(26) $end
$var reg 32 Y data_ram(27) $end
$var reg 32 Z data_ram(28) $end
$var reg 32 [ data_ram(29) $end
$var reg 32 \ data_ram(30) $end
$var reg 32 ] data_ram(31) $end
$var reg 32 ^ data_ram(32) $end
$var reg 32 _ data_ram(33) $end
$var reg 32 ` data_ram(34) $end
$var reg 32 a data_ram(35) $end
$var reg 32 b data_ram(36) $end
$var reg 32 c data_ram(37) $end
$var reg 32 d data_ram(38) $end
$var reg 32 e data_ram(39) $end
$var reg 32 f data_ram(40) $end
$var reg 32 g data_ram(41) $end
$var reg 32 h data_ram(42) $end
$var reg 32 i data_ram(43) $end
$var reg 32 j data_ram(44) $end
$var reg 32 k data_ram(45) $end
$var reg 32 l data_ram(46) $end
$var reg 32 m data_ram(47) $end
$var reg 32 n data_ram(48) $end
$var reg 32 o data_ram(49) $end
$var reg 32 p data_ram(50) $end
$var reg 32 q data_ram(51) $end
$var reg 32 r data_ram(52) $end
$var reg 32 s data_ram(53) $end
$var reg 32 t data_ram(54) $end
$var reg 32 u data_ram(55) $end
$var reg 32 v data_ram(56) $end
$var reg 32 w data_ram(57) $end
$var reg 32 x data_ram(58) $end
$var reg 32 y data_ram(59) $end
$var reg 32 z data_ram(60) $end
$var reg 32 { data_ram(61) $end
$var reg 32 | data_ram(62) $end
$var reg 32 } data_ram(63) $end
$var reg 32 ~ data_ram(64) $end
$var reg 32 "! data_ram(65) $end
$var reg 32 "" data_ram(66) $end
$var reg 32 "# data_ram(67) $end
$var reg 32 "$ data_ram(68) $end
$var reg 32 "% data_ram(69) $end
$var reg 32 "& data_ram(70) $end
$var reg 32 "' data_ram(71) $end
$var reg 32 "( data_ram(72) $end
$var reg 32 ") data_ram(73) $end
$var reg 32 "* data_ram(74) $end
$var reg 32 "+ data_ram(75) $end
$var reg 32 ", data_ram(76) $end
$var reg 32 "- data_ram(77) $end
$var reg 32 ". data_ram(78) $end
$var reg 32 "/ data_ram(79) $end
$var reg 32 "0 data_ram(80) $end
$var reg 32 "1 data_ram(81) $end
$var reg 32 "2 data_ram(82) $end
$var reg 32 "3 data_ram(83) $end
$var reg 32 "4 data_ram(84) $end
$var reg 32 "5 data_ram(85) $end
$var reg 32 "6 data_ram(86) $end
$var reg 32 "7 data_ram(87) $end
$var reg 32 "8 data_ram(88) $end
$var reg 32 "9 data_ram(89) $end
$var reg 32 ": data_ram(90) $end
$var reg 32 "; data_ram(91) $end
$var reg 32 "< data_ram(92) $end
$var reg 32 "= data_ram(93) $end
$var reg 32 "> data_ram(94) $end
$var reg 32 "? data_ram(95) $end
$var reg 32 "@ data_ram(96) $end
$var reg 32 "A data_ram(97) $end
$var reg 32 "B data_ram(98) $end
$var reg 32 "C data_ram(99) $end
$var reg 32 "D data_ram(100) $end
$var reg 32 "E data_ram(101) $end
$var reg 32 "F data_ram(102) $end
$var reg 32 "G data_ram(103) $end
$var reg 32 "H data_ram(104) $end
$var reg 32 "I data_ram(105) $end
$var reg 32 "J data_ram(106) $end
$var reg 32 "K data_ram(107) $end
$var reg 32 "L data_ram(108) $end
$var reg 32 "M data_ram(109) $end
$var reg 32 "N data_ram(110) $end
$var reg 32 "O data_ram(111) $end
$var reg 32 "P data_ram(112) $end
$var reg 32 "Q data_ram(113) $end
$var reg 32 "R data_ram(114) $end
$var reg 32 "S data_ram(115) $end
$var reg 32 "T data_ram(116) $end
$var reg 32 "U data_ram(117) $end
$var reg 32 "V data_ram(118) $end
$var reg 32 "W data_ram(119) $end
$var reg 32 "X data_ram(120) $end
$var reg 32 "Y data_ram(121) $end
$var reg 32 "Z data_ram(122) $end
$var reg 32 "[ data_ram(123) $end
$var reg 32 "\ data_ram(124) $end
$var reg 32 "] data_ram(125) $end
$var reg 32 "^ data_ram(126) $end
$var reg 32 "_ data_ram(127) $end
$upscope $end
$upscope $end
$scope module inst_mem0 $end
$var reg 32 9 instruction $end
$var reg 7 1 opcode $end
$var reg 5 # ra $end
$var reg 5 $ rb $end
$var reg 32 8 read_addr $end
$var reg 1 " reset $end
$var reg 5 % wa $end
$scope module inst_ram $end
$var reg 32 "` inst_ram(0) $end
$var reg 32 "a inst_ram(1) $end
$var reg 32 "b inst_ram(2) $end
$var reg 32 "c inst_ram(3) $end
$var reg 32 "d inst_ram(4) $end
$var reg 32 "e inst_ram(5) $end
$var reg 32 "f inst_ram(6) $end
$var reg 32 "g inst_ram(7) $end
$var reg 32 "h inst_ram(8) $end
$var reg 32 "i inst_ram(9) $end
$var reg 32 "j inst_ram(10) $end
$var reg 32 "k inst_ram(11) $end
$var reg 32 "l inst_ram(12) $end
$var reg 32 "m inst_ram(13) $end
$var reg 32 "n inst_ram(14) $end
$var reg 32 "o inst_ram(15) $end
$var reg 32 "p inst_ram(16) $end
$var reg 32 "q inst_ram(17) $end
$var reg 32 "r inst_ram(18) $end
$var reg 32 "s inst_ram(19) $end
$var reg 32 "t inst_ram(20) $end
$var reg 32 "u inst_ram(21) $end
$var reg 32 "v inst_ram(22) $end
$var reg 32 "w inst_ram(23) $end
$var reg 32 "x inst_ram(24) $end
$var reg 32 "y inst_ram(25) $end
$var reg 32 "z inst_ram(26) $end
$var reg 32 "{ inst_ram(27) $end
$var reg 32 "| inst_ram(28) $end
$var reg 32 "} inst_ram(29) $end
$var reg 32 "~ inst_ram(30) $end
$var reg 32 #! inst_ram(31) $end
$var reg 32 #" inst_ram(32) $end
$var reg 32 ## inst_ram(33) $end
$var reg 32 #$ inst_ram(34) $end
$var reg 32 #% inst_ram(35) $end
$var reg 32 #& inst_ram(36) $end
$var reg 32 #' inst_ram(37) $end
$var reg 32 #( inst_ram(38) $end
$var reg 32 #) inst_ram(39) $end
$var reg 32 #* inst_ram(40) $end
$var reg 32 #+ inst_ram(41) $end
$var reg 32 #, inst_ram(42) $end
$var reg 32 #- inst_ram(43) $end
$var reg 32 #. inst_ram(44) $end
$var reg 32 #/ inst_ram(45) $end
$var reg 32 #0 inst_ram(46) $end
$var reg 32 #1 inst_ram(47) $end
$var reg 32 #2 inst_ram(48) $end
$var reg 32 #3 inst_ram(49) $end
$var reg 32 #4 inst_ram(50) $end
$var reg 32 #5 inst_ram(51) $end
$var reg 32 #6 inst_ram(52) $end
$var reg 32 #7 inst_ram(53) $end
$var reg 32 #8 inst_ram(54) $end
$var reg 32 #9 inst_ram(55) $end
$var reg 32 #: inst_ram(56) $end
$var reg 32 #; inst_ram(57) $end
$var reg 32 #< inst_ram(58) $end
$var reg 32 #= inst_ram(59) $end
$var reg 32 #> inst_ram(60) $end
$var reg 32 #? inst_ram(61) $end
$var reg 32 #@ inst_ram(62) $end
$var reg 32 #A inst_ram(63) $end
$var reg 32 #B inst_ram(64) $end
$var reg 32 #C inst_ram(65) $end
$var reg 32 #D inst_ram(66) $end
$var reg 32 #E inst_ram(67) $end
$var reg 32 #F inst_ram(68) $end
$var reg 32 #G inst_ram(69) $end
$var reg 32 #H inst_ram(70) $end
$var reg 32 #I inst_ram(71) $end
$var reg 32 #J inst_ram(72) $end
$var reg 32 #K inst_ram(73) $end
$var reg 32 #L inst_ram(74) $end
$var reg 32 #M inst_ram(75) $end
$var reg 32 #N inst_ram(76) $end
$var reg 32 #O inst_ram(77) $end
$var reg 32 #P inst_ram(78) $end
$var reg 32 #Q inst_ram(79) $end
$var reg 32 #R inst_ram(80) $end
$var reg 32 #S inst_ram(81) $end
$var reg 32 #T inst_ram(82) $end
$var reg 32 #U inst_ram(83) $end
$var reg 32 #V inst_ram(84) $end
$var reg 32 #W inst_ram(85) $end
$var reg 32 #X inst_ram(86) $end
$var reg 32 #Y inst_ram(87) $end
$var reg 32 #Z inst_ram(88) $end
$var reg 32 #[ inst_ram(89) $end
$var reg 32 #\ inst_ram(90) $end
$var reg 32 #] inst_ram(91) $end
$var reg 32 #^ inst_ram(92) $end
$var reg 32 #_ inst_ram(93) $end
$var reg 32 #` inst_ram(94) $end
$var reg 32 #a inst_ram(95) $end
$var reg 32 #b inst_ram(96) $end
$var reg 32 #c inst_ram(97) $end
$var reg 32 #d inst_ram(98) $end
$var reg 32 #e inst_ram(99) $end
$var reg 32 #f inst_ram(100) $end
$var reg 32 #g inst_ram(101) $end
$var reg 32 #h inst_ram(102) $end
$var reg 32 #i inst_ram(103) $end
$var reg 32 #j inst_ram(104) $end
$var reg 32 #k inst_ram(105) $end
$var reg 32 #l inst_ram(106) $end
$var reg 32 #m inst_ram(107) $end
$var reg 32 #n inst_ram(108) $end
$var reg 32 #o inst_ram(109) $end
$var reg 32 #p inst_ram(110) $end
$var reg 32 #q inst_ram(111) $end
$var reg 32 #r inst_ram(112) $end
$var reg 32 #s inst_ram(113) $end
$var reg 32 #t inst_ram(114) $end
$var reg 32 #u inst_ram(115) $end
$var reg 32 #v inst_ram(116) $end
$var reg 32 #w inst_ram(117) $end
$var reg 32 #x inst_ram(118) $end
$var reg 32 #y inst_ram(119) $end
$var reg 32 #z inst_ram(120) $end
$var reg 32 #{ inst_ram(121) $end
$var reg 32 #| inst_ram(122) $end
$var reg 32 #} inst_ram(123) $end
$var reg 32 #~ inst_ram(124) $end
$var reg 32 $! inst_ram(125) $end
$var reg 32 $" inst_ram(126) $end
$var reg 32 $# inst_ram(127) $end
$upscope $end
$upscope $end
$scope module alu0 $end
$var reg 4 * alu_op $end
$var reg 32 ' rda $end
$var reg 32 ) rdx $end
$var reg 1 " reset $end
$var reg 32 2 result $end
$upscope $end
$scope module reg_file0 $end
$var reg 1 ! clk $end
$var reg 5 # ra $end
$var reg 5 $ rb $end
$var reg 32 ' rda $end
$var reg 32 ( rdb $end
$var reg 1 0 reg_wr $end
$var reg 1 " reset $end
$var reg 5 % wa $end
$var reg 32 & wda $end
$scope module registers $end
$var reg 32 $$ registers(0) $end
$var reg 32 $% registers(1) $end
$var reg 32 $& registers(2) $end
$var reg 32 $' registers(3) $end
$var reg 32 $( registers(4) $end
$var reg 32 $) registers(5) $end
$var reg 32 $* registers(6) $end
$var reg 32 $+ registers(7) $end
$var reg 32 $, registers(8) $end
$var reg 32 $- registers(9) $end
$var reg 32 $. registers(10) $end
$var reg 32 $/ registers(11) $end
$var reg 32 $0 registers(12) $end
$var reg 32 $1 registers(13) $end
$var reg 32 $2 registers(14) $end
$var reg 32 $3 registers(15) $end
$var reg 32 $4 registers(16) $end
$var reg 32 $5 registers(17) $end
$var reg 32 $6 registers(18) $end
$var reg 32 $7 registers(19) $end
$var reg 32 $8 registers(20) $end
$var reg 32 $9 registers(21) $end
$var reg 32 $: registers(22) $end
$var reg 32 $; registers(23) $end
$var reg 32 $< registers(24) $end
$var reg 32 $= registers(25) $end
$var reg 32 $> registers(26) $end
$var reg 32 $? registers(27) $end
$var reg 32 $@ registers(28) $end
$var reg 32 $A registers(29) $end
$var reg 32 $B registers(30) $end
$var reg 32 $C registers(31) $end
$upscope $end
$upscope $end
$scope module pc_adder0 $end
$var reg 32 < pc $end
$var reg 32 8 read_addr $end
$var reg 1 " reset $end
$upscope $end
$scope module jmp_adder0 $end
$var reg 32 8 jmp_addr $end
$var reg 32 < pc $end
$var reg 1 " reset $end
$var reg 32 4 shl $end
$upscope $end
$scope module pc_mux0 $end
$var reg 32 ; jmp_addr $end
$var reg 32 < pc $end
$var reg 32 : pc_addr $end
$var reg 1 5 pc_sel $end
$var reg 1 " reset $end
$upscope $end
$scope module alu_mux0 $end
$var reg 1 / alu_src $end
$var reg 32 6 im_gen $end
$var reg 32 ( rdb $end
$var reg 32 ) rdx $end
$var reg 1 " reset $end
$upscope $end
$scope module wda_mux0 $end
$var reg 1 - mem_to_rgs $end
$var reg 32 3 read_data $end
$var reg 1 " reset $end
$var reg 32 2 result $end
$var reg 32 & wda $end
$upscope $end
$scope module alu_control0 $end
$var reg 4 * alu_op $end
$var reg 32 9 instruction $end
$var reg 4 7 oprtin $end
$var reg 1 " reset $end
$upscope $end
$scope module imm_gen0 $end
$var reg 32 6 im_gen $end
$var reg 32 9 instruction $end
$var reg 1 " reset $end
$upscope $end
$upscope $end
$upscope $end

$enddefinitions $end
$dumpvars
b0 !
0"
b00000 #
b00000 $
b00000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b0000 *
b0 +
b0 ,
b0 -
b0 .
b0 /
b0 0
b0000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b0 5
b00000000000000000000000000000000 6
b0000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b0 =
b00000000001100010000001110110011 >
b00000000001100010000001110110011 ?
b00000000001100010000001110110011 @
b00000000001100010000001110110011 A
b00000000001100010000001110110011 B
b00000000001100010000001110110011 C
b00000000001100010000001110110011 D
b00000000001100010000001110110011 E
b00000000001100010000001110110011 F
b00000000001100010000001110110011 G
b00000000001100010000001110110011 H
b00000000001100010000001110110011 I
b00000000001100010000001110110011 J
b00000000001100010000001110110011 K
b00000000001100010000001110110011 L
b00000000001100010000001110110011 M
b00000000001100010000001110110011 N
b00000000001100010000001110110011 O
b00000000001100010000001110110011 P
b00000000001100010000001110110011 Q
b00000000001100010000001110110011 R
b00000000001100010000001110110011 S
b00000000001100010000001110110011 T
b00000000001100010000001110110011 U
b00000000001100010000001110110011 V
b00000000001100010000001110110011 W
b00000000001100010000001110110011 X
b00000000001100010000001110110011 Y
b00000000001100010000001110110011 Z
b00000000001100010000001110110011 [
b00000000001100010000001110110011 \
b00000000001100010000001110110011 ]
b00000000001100010000001110110011 ^
b00000000001100010000001110110011 _
b00000000001100010000001110110011 `
b00000000001100010000001110110011 a
b00000000001100010000001110110011 b
b00000000001100010000001110110011 c
b00000000001100010000001110110011 d
b00000000001100010000001110110011 e
b00000000001100010000001110110011 f
b00000000001100010000001110110011 g
b00000000001100010000001110110011 h
b00000000001100010000001110110011 i
b00000000001100010000001110110011 j
b00000000001100010000001110110011 k
b00000000001100010000001110110011 l
b00000000001100010000001110110011 m
b00000000001100010000001110110011 n
b00000000001100010000001110110011 o
b00000000001100010000001110110011 p
b00000000001100010000001110110011 q
b00000000001100010000001110110011 r
b00000000001100010000001110110011 s
b00000000001100010000001110110011 t
b00000000001100010000001110110011 u
b00000000001100010000001110110011 v
b00000000001100010000001110110011 w
b00000000001100010000001110110011 x
b00000000001100010000001110110011 y
b00000000001100010000001110110011 z
b00000000001100010000001110110011 {
b00000000001100010000001110110011 |
b00000000001100010000001110110011 }
b00000000001100010000001110110011 ~
b00000000001100010000001110110011 "!
b00000000001100010000001110110011 ""
b00000000001100010000001110110011 "#
b00000000001100010000001110110011 "$
b00000000001100010000001110110011 "%
b00000000001100010000001110110011 "&
b00000000001100010000001110110011 "'
b00000000001100010000001110110011 "(
b00000000001100010000001110110011 ")
b00000000001100010000001110110011 "*
b00000000001100010000001110110011 "+
b00000000001100010000001110110011 ",
b00000000001100010000001110110011 "-
b00000000001100010000001110110011 ".
b00000000001100010000001110110011 "/
b00000000001100010000001110110011 "0
b00000000001100010000001110110011 "1
b00000000001100010000001110110011 "2
b00000000001100010000001110110011 "3
b00000000001100010000001110110011 "4
b00000000001100010000001110110011 "5
b00000000001100010000001110110011 "6
b00000000001100010000001110110011 "7
b00000000001100010000001110110011 "8
b00000000001100010000001110110011 "9
b00000000001100010000001110110011 ":
b00000000001100010000001110110011 ";
b00000000001100010000001110110011 "<
b00000000001100010000001110110011 "=
b00000000001100010000001110110011 ">
b00000000001100010000001110110011 "?
b00000000001100010000001110110011 "@
b00000000001100010000001110110011 "A
b00000000001100010000001110110011 "B
b00000000001100010000001110110011 "C
b00000000001100010000001110110011 "D
b00000000001100010000001110110011 "E
b00000000001100010000001110110011 "F
b00000000001100010000001110110011 "G
b00000000001100010000001110110011 "H
b00000000001100010000001110110011 "I
b00000000001100010000001110110011 "J
b00000000001100010000001110110011 "K
b00000000001100010000001110110011 "L
b00000000001100010000001110110011 "M
b00000000001100010000001110110011 "N
b00000000001100010000001110110011 "O
b00000000001100010000001110110011 "P
b00000000001100010000001110110011 "Q
b00000000001100010000001110110011 "R
b00000000001100010000001110110011 "S
b00000000001100010000001110110011 "T
b00000000001100010000001110110011 "U
b00000000001100010000001110110011 "V
b00000000001100010000001110110011 "W
b00000000001100010000001110110011 "X
b00000000001100010000001110110011 "Y
b00000000001100010000001110110011 "Z
b00000000001100010000001110110011 "[
b00000000001100010000001110110011 "\
b00000000001100010000001110110011 "]
b00000000001100010000001110110011 "^
b00000000001100010000001110110011 "_
b00000000001100010000001110110011 "`
b00000000001100010000001110110011 "a
b00000000001100010000001110110011 "b
b00000000001100010000001110110011 "c
b00000000001100010000001110110011 "d
b00000000001100010000001110110011 "e
b00000000001100010000001110110011 "f
b00000000001100010000001110110011 "g
b00000000001100010000001110110011 "h
b00000000001100010000001110110011 "i
b00000000001100010000001110110011 "j
b00000000001100010000001110110011 "k
b00000000001100010000001110110011 "l
b00000000001100010000001110110011 "m
b00000000001100010000001110110011 "n
b00000000001100010000001110110011 "o
b00000000001100010000001110110011 "p
b00000000001100010000001110110011 "q
b00000000001100010000001110110011 "r
b00000000001100010000001110110011 "s
b00000000001100010000001110110011 "t
b00000000001100010000001110110011 "u
b00000000001100010000001110110011 "v
b00000000001100010000001110110011 "w
b00000000001100010000001110110011 "x
b00000000001100010000001110110011 "y
b00000000001100010000001110110011 "z
b00000000001100010000001110110011 "{
b00000000001100010000001110110011 "|
b00000000001100010000001110110011 "}
b00000000001100010000001110110011 "~
b00000000001100010000001110110011 #!
b00000000001100010000001110110011 #"
b00000000001100010000001110110011 ##
b00000000001100010000001110110011 #$
b00000000001100010000001110110011 #%
b00000000001100010000001110110011 #&
b00000000001100010000001110110011 #'
b00000000001100010000001110110011 #(
b00000000001100010000001110110011 #)
b00000000001100010000001110110011 #*
b00000000001100010000001110110011 #+
b00000000001100010000001110110011 #,
b00000000001100010000001110110011 #-
b00000000001100010000001110110011 #.
b00000000001100010000001110110011 #/
b00000000001100010000001110110011 #0
b00000000001100010000001110110011 #1
b00000000001100010000001110110011 #2
b00000000001100010000001110110011 #3
b00000000001100010000001110110011 #4
b00000000001100010000001110110011 #5
b00000000001100010000001110110011 #6
b00000000001100010000001110110011 #7
b00000000001100010000001110110011 #8
b00000000001100010000001110110011 #9
b00000000001100010000001110110011 #:
b00000000001100010000001110110011 #;
b00000000001100010000001110110011 #<
b00000000001100010000001110110011 #=
b00000000001100010000001110110011 #>
b00000000001100010000001110110011 #?
b00000000001100010000001110110011 #@
b00000000001100010000001110110011 #A
b00000000001100010000001110110011 #B
b00000000001100010000001110110011 #C
b00000000001100010000001110110011 #D
b00000000001100010000001110110011 #E
b00000000001100010000001110110011 #F
b00000000001100010000001110110011 #G
b00000000001100010000001110110011 #H
b00000000001100010000001110110011 #I
b00000000001100010000001110110011 #J
b00000000001100010000001110110011 #K
b00000000001100010000001110110011 #L
b00000000001100010000001110110011 #M
b00000000001100010000001110110011 #N
b00000000001100010000001110110011 #O
b00000000001100010000001110110011 #P
b00000000001100010000001110110011 #Q
b00000000001100010000001110110011 #R
b00000000001100010000001110110011 #S
b00000000001100010000001110110011 #T
b00000000001100010000001110110011 #U
b00000000001100010000001110110011 #V
b00000000001100010000001110110011 #W
b00000000001100010000001110110011 #X
b00000000001100010000001110110011 #Y
b00000000001100010000001110110011 #Z
b00000000001100010000001110110011 #[
b00000000001100010000001110110011 #\
b00000000001100010000001110110011 #]
b00000000001100010000001110110011 #^
b00000000001100010000001110110011 #_
b00000000001100010000001110110011 #`
b00000000001100010000001110110011 #a
b00000000001100010000001110110011 #b
b00000000001100010000001110110011 #c
b00000000001100010000001110110011 #d
b00000000001100010000001110110011 #e
b00000000001100010000001110110011 #f
b00000000001100010000001110110011 #g
b00000000001100010000001110110011 #h
b00000000001100010000001110110011 #i
b00000000001100010000001110110011 #j
b00000000001100010000001110110011 #k
b00000000001100010000001110110011 #l
b00000000001100010000001110110011 #m
b00000000001100010000001110110011 #n
b00000000001100010000001110110011 #o
b00000000001100010000001110110011 #p
b00000000001100010000001110110011 #q
b00000000001100010000001110110011 #r
b00000000001100010000001110110011 #s
b00000000001100010000001110110011 #t
b00000000001100010000001110110011 #u
b00000000001100010000001110110011 #v
b00000000001100010000001110110011 #w
b00000000001100010000001110110011 #x
b00000000001100010000001110110011 #y
b00000000001100010000001110110011 #z
b00000000001100010000001110110011 #{
b00000000001100010000001110110011 #|
b00000000001100010000001110110011 #}
b00000000001100010000001110110011 #~
b00000000001100010000001110110011 $!
b00000000001100010000001110110011 $"
b00000000001100010000001110110011 $#
b00000000000000000000000000001010 $$
b00000000000000000000000000001011 $%
b00000000000000000000000000001100 $&
b00000000000000000000000000001101 $'
b00000000000000000000000000001110 $(
b00000000000000000000000000001111 $)
b00000000000000000000000000010000 $*
b00000000000000000000000000010001 $+
b00000000000000000000000000010010 $,
b00000000000000000000000000010011 $-
b00000000000000000000000000010100 $.
b00000000000000000000000000010101 $/
b00000000000000000000000000010110 $0
b00000000000000000000000000010111 $1
b00000000000000000000000000011000 $2
b00000000000000000000000000011001 $3
b00000000000000000000000000011010 $4
b00000000000000000000000000011011 $5
b00000000000000000000000000011100 $6
b00000000000000000000000000011101 $7
b00000000000000000000000000011110 $8
b00000000000000000000000000011111 $9
b00000000000000000000000000100000 $:
b00000000000000000000000000100001 $;
b00000000000000000000000000100010 $<
b00000000000000000000000000100011 $=
b00000000000000000000000000100100 $>
b00000000000000000000000000100101 $?
b00000000000000000000000000100110 $@
b00000000000000000000000000100111 $A
b00000000000000000000000000101000 $B
b00000000000000000000000000101001 $C
$end
#10
b1 !
#20
b0 !
1"
b00000000001100010000001110110011 9
b00010 #
b00011 $
b0110011 1
b00111 %
b0010 7
b1 0
b0010 *
b00000000000000000000000000001100 '
b00000000000000000000000000001101 (
b00000000001100010000001110110011 6
b00000000000000000000000000001101 )
b00000000000000000000000000001100 2
b00000000000000000000000000001100 &
b00000000000000000000000000011001 2
b00000000000000000000000000011001 &
#30
b1 !
b1 =
b00000000000000000000000000011001 $+
b00000000000000000000000000000001 <
b00000000000000000000000000000010 8
#40
b0 !
#50
b1 !
#60
b0 !
#70
b1 !
b0 =
#80
b0 !
#90
b1 !
#100
b0 !
#110
b1 !
b1 =
#120
b0 !
#130
b1 !
#140
b0 !
#150
b1 !
b0 =
#160
b0 !
#170
b1 !
#180
b0 !
#190
b1 !
b1 =
#200
b0 !
